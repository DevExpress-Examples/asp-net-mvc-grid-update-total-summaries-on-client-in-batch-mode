@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridView";
        settings.CallbackRouteValues = new { Controller = "Home", Action = "GridViewPartial" };
        settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "Home", Action = "BatchUpdatePartial" };
        settings.SettingsEditing.Mode = GridViewEditingMode.Batch;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;

        settings.KeyFieldName = "ID";

        settings.Columns.Add("C1");
        settings.Columns.Add(column =>
        {
            column.FieldName = "C2";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            ASPxSummaryItem summaryItem = new ASPxSummaryItem(column.FieldName, DevExpress.Data.SummaryItemType.Sum);
            summaryItem.Tag = column.FieldName + "_Sum";
            summaryItem.DisplayFormat = "{0}";
            settings.TotalSummary.Add(summaryItem);

            column.SetFooterTemplateContent(c =>
            {
                Html.DevExpress().Label(lbSettings =>
                {
                    string fieldName = (c.Column as GridViewDataColumn).FieldName;
                    lbSettings.Name = "labelSum";
                    lbSettings.Properties.EnableClientSideAPI = true;
                    ASPxSummaryItem summaryItem1 = c.Grid.TotalSummary.First(i => i.Tag == (fieldName + "_Sum"));
                    lbSettings.Text = c.Grid.GetTotalSummaryValue(summaryItem1).ToString();
                }).Render();
            });
        });
        settings.Columns.Add("C3");
        settings.Columns.Add(column =>
        {
            column.FieldName = "C4";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "C5";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
        });


        settings.ClientSideEvents.BatchEditEndEditing = "OnBatchEditEndEditing";
        settings.CellEditorInitialize = (s, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.Dynamic;
        };

        settings.Settings.ShowFooter = true;

        settings.SetStatusBarTemplateContent(c =>
        {
            ViewContext.Writer.Write("<div style='text-align: right'>");

            Html.DevExpress().HyperLink(hlSettings =>
            {
                hlSettings.Name = "hlSave";
                hlSettings.Properties.Text = "Save changes";
                hlSettings.Properties.ClientSideEvents.Click = "function(s, e){ GridView.UpdateEdit(); }";
            }).Render();
            ViewContext.Writer.Write(" ");

            Html.DevExpress().HyperLink(hlSettings =>
            {
                hlSettings.Name = "hlCancel";
                hlSettings.Properties.Text = "Cancel changes";
                hlSettings.Properties.ClientSideEvents.Click = "function(s, e){ GridView.CancelEdit(); GridView.Refresh(); }";
            }).Render();

            ViewContext.Writer.Write("</div>");
        });
    });
    if (ViewData["EditError"] != null) {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()
